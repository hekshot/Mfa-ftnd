import axios from "axios";
import { useLocation } from "react-router-dom";
import { useNavigate } from "react-router-dom";
import { useToken } from "../auth/useToken";
import React, { useState } from "react";
import {
  Card,
  CardBody,
  CardHeader,
  Container,
  Button,
  Row,
  Col,
} from "reactstrap";

function Verify() {
  const location = useLocation();
  const [otpCode, setOtpCode] = useState("");

  const recievedData = location.state;
  const [token, setToken] = useToken();
  const navigate = useNavigate();
  //console.log(recievedData.email);
  const verifyCode = async (event) => {
    event.preventDefault();
    const response = await axios.post(
      "http://localhost:8080/api/v1/auth/verify",
      {
        email: recievedData.email,
        code: otpCode,
      }
    );
    if (response.status === 200) {
      const jwt_token = response.data["accessToken"];
      setToken(jwt_token);
      navigate("/");
    }
  };

  return (
    <Container>
      <Row className="mt-4">
        <Col sm={{ size: 5, offset: 3 }}>
          <Card color="dark" inverse>
            <CardHeader>
              <h5>Enter 6 digits Validation Code Generated by the app:</h5>
            </CardHeader>
            <CardBody>
              <input
                type="text"
                id="validationCode"
                name="validationCode"
                required
                value={otpCode}
                onChange={(e) => setOtpCode(e.target.value)}
              />
            </CardBody>
            <Container className="text-center">
              <Button
                outline
                color="light"
                onClick={verifyCode}
                className={otpCode.length < 6 ? "button-disabled" : ""}
              >
                Verify code
              </Button>
            </Container>
          </Card>
        </Col>
      </Row>
    </Container>

    // <>

    // <div className="form-group">
    //     <label htmlFor="validationCode">
    //       Enter 6 digits Validation Code Generated by the app
    //     </label>
    //     <input
    //       type="text"
    //       id="validationCode"
    //       name="validationCode"
    //       required
    //       value={otpCode}
    //       onChange={(e) => setOtpCode(e.target.value)}
    //     />
    //   </div>
    //   <button
    //     type="button"
    //     onClick={verifyCode}
    //     className={otpCode.length < 6 ? "button-disabled" : ""}
    //   >
    //     Verify code
    //   </button>
    // </>
  );
}

export default Verify;
